import numpy as np
from collections import Counter
with open('./Input_files/3.txt') as file:
    input = file.readlines()

#Counter has multiple update options
position_track = Counter()

def parse(command):
    if command[0] == 'U':
        dx = 0
        dy = int(command[1:])
        return dx,dy
    elif command[0] == 'D':
        dx = 0
        dy = -1*int(command[1:])
        return dx,dy
    if command[0] == 'R':
        dx = int(command[1:])
        dy = 0
        return dx,dy
    if command[0] == 'L':
        dx = -1 * int(command[1:])
        dy = 0
        return dx,dy

for line in input:
    commands = line.split(',')
    posx = 0
    posy = 0
    for command in commands:
        dx,dy = parse(command)
        if dx >0:
            update_list = [(posx+deltax,posy) for deltax in range(1,dx+1)]
        else:
            update_list = [(posx, posy + deltay) for deltay in range(1, dy + 1)]
        posx += dx
        posy += dy
        position_track.update(update_list)

min_dist = 9999999999
cross_road_pos = [k for k, v in position_track.items() if v > 1]
for cross in cross_road_pos:
    x,y = cross
    if abs(x) + abs(y) < min_dist:
        min_dist = abs(x) + abs(y)

print(f"Part1: {min_dist}")